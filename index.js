"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.GPUComputationRenderer=GPUComputationRenderer;var _three=require("three");function GPUComputationRenderer(sizeX,sizeY,renderer){this.variables=[];this.currentTextureIndex=0;let scene=new _three.Scene;let camera=new _three.Camera;camera.position.z=1;let passThruUniforms={texture:{value:null}};let passThruShader=createShaderMaterial(getPassThroughFragmentShader(),passThruUniforms);let mesh=new _three.Mesh(new _three.PlaneBufferGeometry(2,2),passThruShader);scene.add(mesh);this.addVariable=function(variableName,computeFragmentShader,initialValueTexture){let material=this.createShaderMaterial(computeFragmentShader);let variable={name:variableName,initialValueTexture,material,dependencies:null,renderTargets:[],wrapS:null,wrapT:null,minFilter:_three.NearestFilter,magFilter:_three.NearestFilter};this.variables.push(variable);return variable};this.setVariableDependencies=function(variable,dependencies){variable.dependencies=dependencies};this.init=function(){if(!renderer.extensions.get("OES_texture_float")){return"No OES_texture_float support for float textures."}if(renderer.capabilities.maxVertexTextures===0){return"No support for vertex shader textures."}for(let i=0;i<this.variables.length;i++){let variable=this.variables[i];variable.renderTargets[0]=this.createRenderTarget(sizeX,sizeY,variable.wrapS,variable.wrapT,variable.minFilter,variable.magFilter);variable.renderTargets[1]=this.createRenderTarget(sizeX,sizeY,variable.wrapS,variable.wrapT,variable.minFilter,variable.magFilter);this.renderTexture(variable.initialValueTexture,variable.renderTargets[0]);this.renderTexture(variable.initialValueTexture,variable.renderTargets[1]);let material=variable.material;let uniforms=material.uniforms;if(variable.dependencies!==null){for(let d=0;d<variable.dependencies.length;d++){let depVar=variable.dependencies[d];if(depVar.name!==variable.name){let found=false;for(let j=0;j<this.variables.length;j++){if(depVar.name===this.variables[j].name){found=true;break}}if(!found){return"Variable dependency not found. Variable="+variable.name+", dependency="+depVar.name}}uniforms[depVar.name]={value:null};material.fragmentShader="\nuniform sampler2D "+depVar.name+";\n"+material.fragmentShader}}}this.currentTextureIndex=0;return null};this.compute=function(){let currentTextureIndex=this.currentTextureIndex;let nextTextureIndex=this.currentTextureIndex===0?1:0;for(let i=0,il=this.variables.length;i<il;i++){let variable=this.variables[i];if(variable.dependencies!==null){let uniforms=variable.material.uniforms;for(let d=0,dl=variable.dependencies.length;d<dl;d++){let depVar=variable.dependencies[d];uniforms[depVar.name].value=depVar.renderTargets[currentTextureIndex].texture}}this.doRenderTarget(variable.material,variable.renderTargets[nextTextureIndex])}this.currentTextureIndex=nextTextureIndex};this.getCurrentRenderTarget=function(variable){return variable.renderTargets[this.currentTextureIndex]};this.getAlternateRenderTarget=function(variable){return variable.renderTargets[this.currentTextureIndex===0?1:0]};function addResolutionDefine(materialShader){materialShader.defines.resolution="vec2( "+sizeX.toFixed(1)+", "+sizeY.toFixed(1)+" )"};this.addResolutionDefine=addResolutionDefine;function createShaderMaterial(computeFragmentShader,uniforms){uniforms=uniforms||{};let material=new _three.ShaderMaterial({uniforms,vertexShader:getPassThroughVertexShader(),fragmentShader:computeFragmentShader});addResolutionDefine(material);return material};this.createShaderMaterial=createShaderMaterial;this.createRenderTarget=function(sizeXTexture,sizeYTexture,wrapS,wrapT,minFilter,magFilter){sizeXTexture=sizeXTexture||sizeX;sizeYTexture=sizeYTexture||sizeY;wrapS=wrapS||_three.ClampToEdgeWrapping;wrapT=wrapT||_three.ClampToEdgeWrapping;minFilter=minFilter||_three.NearestFilter;magFilter=magFilter||_three.NearestFilter;let renderTarget=new _three.WebGLRenderTarget(sizeXTexture,sizeYTexture,{wrapS,wrapT,minFilter,magFilter,format:_three.RGBAFormat,type:/(iPad|iPhone|iPod)/g.test(navigator.userAgent)?_three.HalfFloatType:_three.FloatType,stencilBuffer:false});return renderTarget};this.createTexture=function(sizeXTexture,sizeYTexture){sizeXTexture=sizeXTexture||sizeX;sizeYTexture=sizeYTexture||sizeY;let a=new Float32Array(sizeXTexture*sizeYTexture*4);let texture=new _three.DataTexture(a,sizeX,sizeY,_three.RGBAFormat,_three.FloatType);texture.needsUpdate=true;return texture};this.renderTexture=function(input,output){passThruUniforms.texture.value=input;this.doRenderTarget(passThruShader,output);passThruUniforms.texture.value=null};this.doRenderTarget=function(material,output){mesh.material=material;renderer.render(scene,camera,output);mesh.material=passThruShader};function getPassThroughVertexShader(){return`void main(){
					gl_Position = vec4( position, 1.0 );
				}`};function getPassThroughFragmentShader(){return`uniform sampler2D texture;
				void main() {
					vec2 uv = gl_FragCoord.xy / resolution.xy;
					gl_FragColor = texture2D( texture, uv );
				}`};}
